# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FMY6ULDybdcU2fikDcOGu1HDVoZF3QRO
"""

!pip install opencv-python
!pip install matplotlib

import cv2
from matplotlib import pyplot as plt
import numpy as np
import math

img1 = cv2.imread('/content/sample_data/lena.png')
img2 = cv2.imread('/content/sample_data/unequalized.jpg')

plt.figure(figsize=(12,12))
plt.subplot(121)
plt.imshow(cv2.cvtColor(img1, cv2.COLOR_BGR2RGB))

plt.subplot(122)
plt.imshow(cv2.cvtColor(img2, cv2.COLOR_BGR2RGB))

scale_percent = 50
w=int(img2.shape[1]*scale_percent/100)
h=int(img2.shape[1]*scale_percent/100)
dim=(w,h)
resized = cv2.resize(img2,dim, interpolation=cv2.INTER_AREA)
plt.imshow(cv2.cvtColor(resized, cv2.COLOR_BGR2RGB))

scale_percent = 25
w=int(img1.shape[1]*scale_percent/100)
h=int(img1.shape[1]*scale_percent/100)
dim=(w,h)
resized = cv2.resize(img1,dim, interpolation=cv2.INTER_AREA)
plt.imshow(cv2.cvtColor(resized, cv2.COLOR_BGR2RGB))

z=np.arange(255)
s_inver = 255-z

plt.figure(figsize=(6,6))
plt.plot(z, s_inver)
plt.show()

img_pb = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)
plt.imshow(cv2.cvtColor(img_pb, cv2.COLOR_BGR2RGB))

invert_img_pb=255-img_pb
invert_img1=255-img1
invert_img2=255-img2
plt.imshow(cv2.cvtColor(invert_img_pb, cv2.COLOR_BGR2RGB))

plt.subplot(221)
plt.imshow(cv2.cvtColor(img1,cv2.COLOR_BGR2RGB), cmap="gray")
plt.axis('off')

plt.subplot(222)
plt.imshow(cv2.cvtColor(invert_img1,cv2.COLOR_BGR2RGB), cmap="gray")
plt.axis('off')

plt.subplot(223)
plt.imshow(cv2.cvtColor(invert_img_pb,cv2.COLOR_BGR2RGB), cmap="gray")
plt.axis('off')

plt.subplot(224)
plt.imshow(cv2.cvtColor(invert_img2,cv2.COLOR_BGR2RGB), cmap="gray")
plt.axis('off')

plt.figure(figsize=(16,16))
normalizedImg = img_pb
img_norm = cv2.normalize(img1, normalizedImg, 0, 100, cv2.NORM_MINMAX)
img_norm_pb = cv2.normalize(img_pb, normalizedImg, 0 ,100, cv2.NORM_MINMAX)

plt.subplot(231)
plt.imshow(cv2.cvtColor(img1,cv2.COLOR_BGR2RGB), cmap="gray")
plt.axis('off')

plt.subplot(232)
plt.imshow(cv2.cvtColor(img_norm,cv2.COLOR_BGR2RGB), cmap="gray")
plt.axis('off')

plt.subplot(233)
plt.imshow(cv2.cvtColor(img_norm_pb,cv2.COLOR_BGR2RGB), cmap="gray")
plt.axis('off')

z_log2=np.log(z+1)
plt.figure(figsize=(6,6))
plt.plot(z, z_log2)

c_scale = 255/(np.log2(1+255))
z_log2 = c_scale * np.log2(z+1)
plt.figure(figsize=(6,6))
plt.plot(z, z_log2)

c_scale = 255/(np.log2(1+255))
#img_log = img1.astype(np.uint32)
#img_log = np.log2(img_log + 1) * c_scale


#img_log = img_log.astype(np.uint8)
#plt.imshow(cv2.cvtColor(img_log,cv2.COLOR_BGR2RGB))

k = 0.025
s_sigmoid = (255/(1+np.exp(-k*(z-127)))).astype(np.uint8)

plt.figure(figsize=(6,6))
plt.plot(z, s_sigmoid)

img_sig = (255/(1+np.exp(-k*(img1.astype(np.int32)-127)))).astype(np.uint8)
plt.imshow(cv2.cvtColor(img_sig,cv2.COLOR_BGR2RGB))

t = 150
img_pb2 = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)
indL = np.where(img_pb2 > t)
img1_thresh = np.zeros(img_pb2.shape).astype(np.uint8)
img1_thresh[indL] = 1
plt.imshow(img1_thresh, cmap="gray")

A = np.random.randint(0,8, [5,5])
print(A)

(M,N) = A.shape
h = [0 for _ in range(0,8,1)]

for i in M:
  for j in N:
    h[] = A[i,j]